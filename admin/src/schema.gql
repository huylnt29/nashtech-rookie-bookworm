# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Book {
  id: Int!
  state: State!
  imageUrls: [String!]!
  name: String!
  description: String!
  publishedYear: Float!
  publisherId: Float!
  categoryId: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum State {
  ACTIVE
  INACTIVE
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Query {
  books(where: BookWhereInput, orderBy: [BookOrderByWithRelationInput!], cursor: BookWhereUniqueInput, take: Float, skip: Float, distinct: [BookScalarFieldEnum!]): [Book!]!
  book(id: Float!): Book!
}

input BookWhereInput {
  id: IntFilter
  AND: [BookWhereInput!]
  OR: [BookWhereInput!]
  NOT: [BookWhereInput!]
}

input IntFilter {
  equals: Float
  lt: Float
  lte: Float
  gt: Float
  gte: Float
}

input BookOrderByWithRelationInput {
  id: SortOrder
}

enum SortOrder {
  asc
  desc
}

input BookWhereUniqueInput {
  id: Float
}

enum BookScalarFieldEnum {
  id
  imageUrls
  name
  description
  publishedYear
  publisherId
  categoryId
  createdAt
  updatedAt
  state
}